.publisher
  .info-publisher
    .descr-info-publisher

      .l-descr-info-publisher
        .avatar-info-user
          = image_tag @publisher.avatar.url(:medium), {class: "img-info-publisher"}
          - if @publisher.is_owned? current_user
            a.upd-avatar-info-user.js-choose-img data-target=".js-publisher-avatar" href="" Update profile picture
            input.js-publisher-avatar type="file" hidden="true" name="avatar" data-pid=@publisher.id
            .loader-avatar
              b style="width: 0%"

      .r-descr-info-publisher
        .title-info-publisher = @publisher.title
        p = @publisher.description
        = render "follow", publisher: @publisher

    - if @publisher.is_owned? current_user
      .filter.settings-info-publisher
        .tab-filter = link_to "Settings", edit_publisher_path

  - if @publisher.is_owned? current_user
    = link_to "+ Create new test", new_publisher_test_path(@publisher.id), {class: "createTest-publisher"}

  .meta-publisher
    - unless @tests.empty?
      = render "tests/filter"

    / - if @publisher.owners.exists? current_user
    /   .filter._fl_l
    /     .tab-filter = link_to "Settings", edit_publisher_path

  = render "tests/list", {list: @tests, publisher: true}
